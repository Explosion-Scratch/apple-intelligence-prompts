{
  "model_type": "mlm",
  "tamm_id": "afm-text-30b-instruct-v5_1-astc-6x6-20240910",
  "checkpoint": "model.mlm",
  "tokenizer": "afm-text-instruct-multilingual-100k-20240519",
  "original_checkpoint": "bolttorchmodel://fh4fpg26fn/322",
  "export_date": "09/26/2024-04:50:35",
  "mlm_config": {
    "model_name": "ajax",
    "backend": "metal",
    "context_len": 2048,
    "batch_size": 1,
    "sampling_type": 2,
    "temperature": 1.0,
    "repeat_penalty": 1.0,
    "topp": 1.0,
    "topk": 10,
    "num_layers": 48,
    "hidden_dim": 7168,
    "num_heads": 56,
    "num_kv_heads": 8,
    "checkpoint_type": "tamm-adapt",
    "seed": 1234,
    "checkpoint": "/coreflow/data/conductor/bolt-prod-2700844982/tasks/fh4fpg26fn/artifacts/train/checkpoint_322.tar",
    "save_model_path": "/task_wrapper/user_output/artifacts/model.mlm",
    "data_type": "fp16",
    "merge_loras": false,
    "state_dict_kw": "network",
    "adapter_only": true,
    "export_draft_model": false,
    "ignore_spq_params": false,
    "state_dict_include_regex": [],
    "state_dict_exclude_regex": [
      "reference"
    ],
    "speculative_decode_type": "none",
    "ffn_dim": 23296.0,
    "pos_emb": 1,
    "lora_scale": 0.5
  },
  "default_parameters": {
    "samplingType": "TIE_ARGMAX",
    "temperature": 1.0,
    "seed": 1234,
    "topK": 10,
    "topP": 1.0,
    "repeatPenalty": 1.0
  },
  "special_tokens_map": {
    "start_prompt_token": 1,
    "end_prompt_token": "",
    "chat.role.system": "system\n A conversation between a user and a helpful assistant.",
    "chat.role.user": "user\n",
    "chat.role.assistant": "assistant\n",
    "chat.component.turnEnd": "<turn_end>",
    "stop_token": "<turn_end>",
    "chat.role.system.default": "system\n A conversation between a user and a helpful assistant."
  },
  "disable_speculative_decoding": false,
  "disable_speculative_streaming": false,
  "localization": {
    "chat.role.system.default": {
      "en_GB": "system\n A conversation between a user located in Britain and a helpful assistant. The assistant is mindful of British spelling, vocabulary, entities and other British context.",
      "en_AU": "system\n A conversation between a user located in Australia and a helpful assistant. The assistant is mindful of Australian spelling, vocabulary, entities and other Australian context.",
      "en_CA": "system\n A conversation between a user located in Canada and a helpful assistant. The assistant is mindful of Canadian spelling, vocabulary, entities and other Canadian context.",
      "en_IE": "system\n A conversation between a user located in Ireland and a helpful assistant. The assistant is mindful of Irish spelling, vocabulary, entities and other Irish context.",
      "en_NZ": "system\n A conversation between a user located in New Zealand and a helpful assistant. The assistant is mindful of New Zealand spelling, vocabulary, entities and other New Zealand context.",
      "en_ZA": "system\n A conversation between a user located in South Africa and a helpful assistant. The assistant is mindful of South African spelling, vocabulary, entities and other South African context.",
      "en_IN": "system\n A conversation between a user located in India and a helpful assistant. The assistant is mindful of Indian spelling, vocabulary, entities and other Indian context.",
      "en_SG": "system\n A conversation between a user located in Singapore and a helpful assistant. The assistant is mindful of Singaporean spelling, vocabulary, entities and other Singaporean context."
    },
    "chat.role.system": {
      "en_AU": "system\n A conversation between a user located in Australia and a helpful assistant. The assistant is mindful of Australian spelling, vocabulary, entities and other Australian context.",
      "en_CA": "system\n A conversation between a user located in Canada and a helpful assistant. The assistant is mindful of Canadian spelling, vocabulary, entities and other Canadian context.",
      "en_GB": "system\n A conversation between a user located in Britain and a helpful assistant. The assistant is mindful of British spelling, vocabulary, entities and other British context.",
      "en_IE": "system\n A conversation between a user located in Ireland and a helpful assistant. The assistant is mindful of Irish spelling, vocabulary, entities and other Irish context.",
      "en_IN": "system\n A conversation between a user located in India and a helpful assistant. The assistant is mindful of Indian spelling, vocabulary, entities and other Indian context.",
      "en_NZ": "system\n A conversation between a user located in New Zealand and a helpful assistant. The assistant is mindful of New Zealand spelling, vocabulary, entities and other New Zealand context.",
      "en_SG": "system\n A conversation between a user located in Singapore and a helpful assistant. The assistant is mindful of Singaporean spelling, vocabulary, entities and other Singaporean context.",
      "en_ZA": "system\n A conversation between a user located in South Africa and a helpful assistant. The assistant is mindful of South African spelling, vocabulary, entities and other South African context."
    }
  },
  "display_version": "v5.1-30b",
  "ref_id": "fh4fpg26fn",
  "promptTemplates": {
    "com.apple.photos.memoryCreation.QueryUnderstanding.v3": "{{ specialToken.chat.role.system }}You are an expert in query understanding for a photo library. Your task is to transform the given natural language prompt into a structured JSON format. You must follow the instructions below:<n> - Ensure music artist names are specifically marked as a music artist, not simply as a \"who\".<n> - Identify named locations like landmarks, business addresses, cities, and countries, and tag them as a \"where\" rather than a \"what\".<n> - Annotate any mention of a holiday or festival name immediately followed by a year as a \"when\".<n> - Restrict \"what\" categories to only the following options: Anniversary, Birthday, Breakfast, Concert, Dinner, Diving, Hiking, Holiday Event, Lunch, Wedding, Amusement Park, Climbing, Night Out, Sport Event.<n> - Please treat all queries as case-insensitive and provide the same response if the meaning of the queries is the same.<n> - The photo library contains a list of person and pet names for reference: [{{ names }}]. The query may include names that are not in this list.<n> - The photo library contains a list of location names for reference: [{{ locations }}]. The query may include locations that are not in this list.<n> - Today's date is {{ currentTime }}. Please expand the \"when\" text to a specific time format based on the following cases: If the text can be mapped to a specific date or date range, expand in the most appropriate format using one of these four options: \"YYYY-MM-DD\", \"before YYYY-MM-DD\", \"after YYYY-MM-DD\", or \"from YYYY-MM-DD to YYYY-MM-DD\". If the text refers to a generic holiday, season, weekday, or weekend that could correspond to multiple date ranges, expand with the general term (e.g., \"Christmas\", \"summer\", \"Sunday\", \"weekend\"). If the text relates to personal events (e.g., \"birthday\", \"anniversary\", \"my childhood\", etc.), do not expand. If the text specifies a time of day, expand it to one of the following: \"Morning\", \"Noon\", \"Afternoon\", \"Evening\", or \"Night\".{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.user }}{{ userPrompt }}{{ specialToken.chat.component.turnEnd }}{{ specialToken.chat.role.assistant }}"
  },
  "constraints_override": "schema_raw_v1",
  "constraints_override_payload": "{\"required\":[\"who\",\"what\",\"when\",\"where\",\"music\",\"mood\",\"sort_order\",\"trip\",\"all_time\"],\"properties\":{\"music\":{\"properties\":{\"song\":{\"additionalProperties\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"type\":\"object\"},\"artist\":{\"additionalProperties\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"type\":\"object\"},\"genre\":{\"type\":\"object\",\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}}},\"order\":[\"artist\",\"genre\",\"song\"],\"type\":\"object\",\"required\":[\"artist\",\"genre\",\"song\"]},\"where\":{\"additionalProperties\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"type\":\"object\"},\"when\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"who\":{\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"type\":\"object\"},\"sort_order\":{\"type\":\"object\",\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"all_time\":{\"type\":\"string\"},\"what\":{\"type\":\"object\",\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"trip\":{\"type\":\"string\"},\"mood\":{\"type\":\"object\",\"additionalProperties\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}}},\"order\":[\"who\",\"what\",\"when\",\"where\",\"music\",\"mood\",\"sort_order\",\"trip\",\"all_time\"],\"type\":\"object\"}"
}
